#
# Postfacto, a free, open-source and self-hosted retro tool aimed at helping
# remote teams.
#
# Copyright (C) 2016 - Present Pivotal Software, Inc.
#
# This program is free software: you can redistribute it and/or modify
#
# it under the terms of the GNU Affero General Public License as
#
# published by the Free Software Foundation, either version 3 of the
#
# License, or (at your option) any later version.
#
#
#
# This program is distributed in the hope that it will be useful,
#
# but WITHOUT ANY WARRANTY; without even the implied warranty of
#
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#
# GNU Affero General Public License for more details.
#
#
#
# You should have received a copy of the GNU Affero General Public License
#
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
name: Pipeline

on: [push, pull_request, workflow_dispatch]

jobs:
  ruby-test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: .ruby-version
        bundler-cache: true
        working-directory: api
    - run: bundle install
      working-directory: e2e
    - run: bundle exec rake db:create db:migrate
      working-directory: api
    - run: bundle exec rake
      working-directory: api

  node-test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '14.16.1'
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: postfacto-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          postfacto-npm-${{ hashFiles('**/package-lock.json') }}
          postfacto-npm-
    - run: npm ci
      working-directory: web
    - run: npm ci
      working-directory: mock-google-server
    - run: npm run lint
      working-directory: web
    - run: npm test
      working-directory: web

  package-build:
    runs-on: ubuntu-20.04
    needs:
    - ruby-test
    - node-test
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: .ruby-version
        bundler-cache: true
        working-directory: api
    - run: bundle pack
      working-directory: api
    - run: rm -rf ./api/vendor/bundle/
    - uses: actions/setup-node@v1
      with:
        node-version: '14.16.1'
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: postfacto-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          postfacto-npm-${{ hashFiles('**/package-lock.json') }}
          postfacto-npm-
    - run: npm ci
      working-directory: web
    - name: Get full tag
      id: full_tag
      run: echo ::set-output name=VERSION::${GITHUB_REF##*/}
    - name: Package build with dependencies
      run: ./package.sh $TAG
      env:
        TAG: ${{ steps.full_tag.outputs.VERSION }}
    - run: mv package.zip package-vendored.zip
    - uses: actions/upload-artifact@v2
      with:
        name: Package (including dependencies)
        path: package-vendored.zip
    - run: rm -rf ./api/vendor/
    - name: Package build without dependencies
      run: ./package.sh $TAG --skip-build
      env:
        TAG: ${{ steps.full_tag.outputs.VERSION }}
    - uses: actions/upload-artifact@v2
      with:
        name: Package (no dependencies)
        path: package.zip
    - uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        files: |
          package*.zip
          deployment/helm/postfacto-*.tgz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  smoke-build:
    runs-on: ubuntu-20.04
    needs:
    - ruby-test
    - node-test
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - name: Get full tag
      id: full_tag
      run: echo ::set-output name=VERSION::${GITHUB_REF##*/}
    - name: Get major version
      id: versions
      run: |
        echo ::set-output name=MAJOR::$(echo $VERSION | cut -d. -f1)
        echo ::set-output name=MINOR::$(echo $VERSION | cut -d. -f2)
      env:
        VERSION: ${{ steps.full_tag.outputs.VERSION }}
    - uses: docker/login-action@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - uses: docker/build-push-action@v2
      with:
        context: ./smoke
        file: ./docker/smoke/Dockerfile
        push: ${{ startsWith(github.ref, 'refs/tags/') }}
        tags: |
          postfacto/smoke
          postfacto/smoke:${{ steps.versions.outputs.MAJOR }}
          postfacto/smoke:${{ steps.versions.outputs.MAJOR }}.${{ steps.versions.outputs.MINOR }}
          postfacto/smoke:${{ steps.full_tag.outputs.VERSION }}
